version: 2
jobs:
  bambu-linux:
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts1
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results2
    docker:
      - image: ubuntu:18.04
    working_directory: ~/ferrandi/PandA-bambu
    steps:
      - run: echo 'export PATH=/usr/lib/ccache:$PATH' >> $BASH_ENV
      - run: apt-get -qq update && apt-get install -y ca-certificates curl git openssh-client
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      # Dependencies
      # Restore the dependency cache
      - restore_cache:
          keys:
            # This branch if available
            - v1-dep-{{ .Branch }}-
            # Default branch if not
            - v1-dep-master-
            # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
            - v1-dep-
      - run: apt-get -qq update
      - run: apt-get -y install ccache autoconf autoconf-archive automake libtool gcc-7 g++-7 gcc-7 gcc-7-plugin-dev gcc-7-multilib g++-7-multilib gfortran-7 gfortran-7-multilib clang-6.0 libclang-6.0-dev  libbdd-dev libboost-all-dev libmpc-dev libmpfi-dev libmpfr-dev libxml2-dev liblzma-dev zlib1g-dev libicu-dev bison doxygen flex graphviz iverilog verilator pkg-config libsuitesparse-dev libglpk-dev make
      - run:
          name: make -f Makefile.init
          command: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then make -f Makefile.init; fi
      - run:
          name: mkdir build && cd build && ../configure --prefix=$HOME/panda --enable-glpk --enable-opt  --with-opt-level=0 && make -j2
          command: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then mkdir build && cd build && ../configure --prefix=$HOME/panda --enable-glpk --enable-opt && make -j2; fi
      - save_cache:
          key: v1-dep-{{ .Branch }}-{{ epoch }}
          paths:
            - vendor/bundle
            - ~/virtualenvs
            - ~/.m2
            - ~/.ivy2
            - ~/.bundle
            - ~/.gradle
            - ~/.cache/bower
            - ~/.ccache
      # Save test results
      - store_test_results:
          path: /tmp/circleci-test-results1
      # Save artifacts
      - store_artifacts:
          path: /tmp/circleci-artifacts1
      - store_artifacts:
          path: /tmp/circleci-test-results1

  bambu-macos:
    macos:
      xcode: '10.2'
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts2
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results2
    working_directory: ~/ferrandi/PandA-bambu
    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      # Dependencies
      # Restore the dependency cache
      - restore_cache:
          keys:
            # This branch if available
            - v1-dep-{{ .Branch }}-
            # Default branch if not
            - v1-dep-master-
            # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
            - v1-dep-
      - run:
          name: Build bambu MacOS
          no_output_timeout: 18000
          command: |
            export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
            echo "PATH = $PATH"
            export COLUMNS=80 # needed by some macports tool
            curl -fsSL https://distfiles.macports.org/MacPorts/MacPorts-2.5.4-10.12-Sierra.pkg -o MacPorts-2.5.4-10.12-Sierra.pkg
            sudo installer -pkg ./MacPorts-2.5.4-10.12-Sierra.pkg -target /
            export PATH=/opt/local/bin:/opt/local/sbin:$PATH
            sudo port -d selfupdate
            sudo port -N -q install git autoconf autoconf-archive automake bison flex boost libtool SuiteSparse glpk iverilog clang-4.0 mpfi coreutils
            sudo cp /opt/local/bin/greadlink /opt/local/bin/readlink
      - run:
          name: make -f Makefile.init
          command: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then make -f Makefile.init; fi
      - run:
          name: mkdir build && cd build && ../configure --prefix=$HOME/panda --enable-glpk --enable-opt --enable-flopoco --with-opt-level=0 --with-clang4=/opt/local/bin/clang-mp-4.0 LDFLAGS=-L/opt/local/lib CPPFLAGS=-I/opt/local/include/ && make -j3 && sudo make install
          command: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then mkdir build && cd build && ../configure --prefix=$HOME/panda --enable-glpk --enable-opt --enable-flopoco --with-opt-level=0 --with-clang4=/opt/local/bin/clang-mp-4.0 LDFLAGS=-L/opt/local/lib CPPFLAGS=-I/opt/local/include/ && make -j3 && make install; fi
      - run:
          name: cd $HOME/panda/share/panda/examples/arf && chmod +x bambu.sh && ./bambu.sh && echo "Bambu is correctly working!!"
          command: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then cd $HOME/panda/share/panda/examples/arf && chmod +x bambu.sh && ./bambu.sh && echo "Bambu is correctly working!!"; fi
      - save_cache:
          key: v1-dep-{{ .Branch }}-{{ epoch }}
          paths:
            - vendor/bundle
            - ~/virtualenvs
            - ~/.m2
            - ~/.ivy2
            - ~/.bundle
            - ~/.gradle
            - ~/.cache/bower
            - ~/.ccache
      # Save test results
      - store_test_results:
          path: /tmp/circleci-test-results2
      # Save artifacts
      - store_artifacts:
          path: /tmp/circleci-artifacts2
      - store_artifacts:
          path: /tmp/circleci-test-results2

workflows:
  version: 2
  build:
    jobs:
      - bambu-linux
