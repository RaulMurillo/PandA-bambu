# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.box = "generic/debian9"
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.vm.provider "virtualbox" do |vb|
     vb.memory = "4096"
     vb.customize [ 'modifyvm', :id, '--vram', '64']
     vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
     vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
     vb.customize ["modifyvm", :id, "--uartmode1", "file", File::NULL]
     vb.name = "PandA-bambu-VM_64bit-Debian9-AppImage"
  end
  config.vm.provision "shell", inline: <<-SHELL
     apt-get update -y
     DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade
     apt-get update -y
     apt-get install -y build-essential dkms libtinfo5
     apt-get install -y autoconf autoconf-archive automake libtool make gcc g++ gcc-multilib libcloog-ppl1 libbdd-dev libboost-all-dev libmpc-dev libmpfr-dev libxml2-dev liblzma-dev libmpfi-dev zlib1g-dev libicu-dev bison flex verilator pkg-config libsuitesparse-dev libglpk-dev
     apt-get install -y git
     apt-get autoremove -y
     wget https://releases.llvm.org/6.0.0/clang+llvm-6.0.0-x86_64-linux-gnu-debian8.tar.xz
     tar xvf clang+llvm-6.0.0-x86_64-linux-gnu-debian8.tar.xz -C /
     wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
     chmod +x appimagetool-x86_64.AppImage
     wget https://github.com/AppImage/AppImageKit/releases/download/continuous/AppRun-x86_64 
     chmod +x AppRun-x86_64
     wget https://github.com/niess/python-appimage/releases/download/python3.9/python3.9.7-cp39-cp39-manylinux1_x86_64.AppImage
     chmod +x python3.9.7-cp39-cp39-manylinux1_x86_64.AppImage
     ./python3.9.7-cp39-cp39-manylinux1_x86_64.AppImage --appimage-extract
     mv squashfs-root python3.9
     rm -f python3.9.7-cp39-cp39-manylinux1_x86_64.AppImage
     cd python3.9
     tar cvJf ../python3.9.tar.xz *
     cd ..
     rm -rf python3.9
     git clone https://github.com/ferrandi/PandA-bambu.git
     cd PandA-bambu
     git checkout panda-0.9.7-dev
     make -f Makefile.init
     mkdir build
     cd build 
     ../configure --prefix=/usr --enable-glpk --disable-release --with-opt-level=2 -with-clang6=/clang+llvm-6.0.0-x86_64-linux-gnu-debian8/bin/clang --with-clang5=/bin/false --with-clang4=/bin/false --with-clang7=/bin/false --with-clang8=/bin/false --with-clang9=/bin/false --with-gcc48=/bin/false --with-gcc49=/bin/false --with-gcc5=/bin/false --with-gcc6=/bin/false --with-gcc7=/bin/false --with-gcc8=/bin/false --disable-flopoco CC=/clang+llvm-6.0.0-x86_64-linux-gnu-debian8/bin/clang CXX=/clang+llvm-6.0.0-x86_64-linux-gnu-debian8/bin/clang++ --enable-oldclangabi 
     make -j2
     make install-strip DESTDIR=/home/vagrant/PandA-bambu/build/dist
     cd /home/vagrant/PandA-bambu/build/dist
     rm -f usr/bin/eucalyptus  usr/bin/spider  usr/bin/tree-panda-gcc
     tar xvf ../../../python3.9.tar.xz
     rm python3.9.7.desktop  python.png
     tar xvf ../../../clang+llvm-6.0.0-x86_64-linux-gnu-debian8.tar.xz
     rm -f `find . -name clang-tidy`
     rm -f `find .  -name clang-query`
     rm -f `find .  -name clang-change-namespace`
     rm -f `find .  -name clang-reorder-fields`
     rm -f `find .  -name clang-func-mapping`
     rm -f `find .  -name sancov`
     rm -f clang+llvm-6.0.0-x86_64-linux-gnu-debian8/lib/*.a
     mkdir lib
     mkdir lib/x86_64-linux-gnu/
     cp /lib/x86_64-linux-gnu/libtinfo.so.5.* lib/x86_64-linux-gnu/
     ln -s /lib/x86_64-linux-gnu/libtinfo.so.5.* lib/x86_64-linux-gnu/libtinfo.so.5
     cp /usr/lib/libbdd.so.0.0.0 usr/lib/libbdd.so.0.0.0
     cd usr/lib/
     ln -s libbdd.so.0.0.0 libbdd.so.0
     cd ../..
     cp ../../style/img/panda.png.in bambu.png
     echo "[Desktop Entry]" > bambu.desktop
     echo "Name=bambu" >> bambu.desktop
     echo "Exec=bambu_wrapper.sh" >> bambu.desktop
     echo "Icon=bambu" >> bambu.desktop
     echo "Type=Application" >> bambu.desktop
     echo "Terminal=true" >> bambu.desktop
     echo "Categories=Development;" >> bambu.desktop
     echo "#!/bin/bash" > usr/bin/bambu_wrapper.sh
     echo "export LC_ALL=\\\"C\\\"" >> usr/bin/bambu_wrapper.sh
     echo "export PYTHONHOME=" >> usr/bin/bambu_wrapper.sh
     echo "export PYTHONPATH=" >> usr/bin/bambu_wrapper.sh
     echo "if [ \\\"\\\$#\\\" -eq 0 ]; then" >> usr/bin/bambu_wrapper.sh
     echo "    \\\$APPDIR/usr/bin/bambu" >> usr/bin/bambu_wrapper.sh
     echo "else" >> usr/bin/bambu_wrapper.sh
     echo "   \\\$APPDIR/usr/bin/bambu \\\$@ --compiler=I386_CLANG6" >> usr/bin/bambu_wrapper.sh
     echo "   return_value=\\\$?" >> usr/bin/bambu_wrapper.sh
     echo "   if test \\\$return_value != 0; then" >> usr/bin/bambu_wrapper.sh
     echo "      exit \\\$return_value" >> usr/bin/bambu_wrapper.sh
     echo "   fi" >> usr/bin/bambu_wrapper.sh
     echo "   exit 0" >> usr/bin/bambu_wrapper.sh
     echo "fi" >> usr/bin/bambu_wrapper.sh
     chmod +x usr/bin/bambu_wrapper.sh
     tar xvf ../../../python3.9.tar.xz
     cp ../../../AppRun-x86_64 AppRun
     rm python.png  python3.9.7.desktop
     rm usr/share/metainfo/python3.9.7.appdata.xml
     cd ..
     ../../appimagetool-x86_64.AppImage dist
     dd if=/dev/zero of=/EMPTY bs=1M
     rm -f /EMPTY
  SHELL
end
